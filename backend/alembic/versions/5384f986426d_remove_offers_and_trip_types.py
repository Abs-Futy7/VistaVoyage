"""Remove offers and trip types

Revision ID: 5384f986426d
Revises: 1cafa1837b7b
Create Date: 2025-07-13 22:50:39.589405

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5384f986426d'
down_revision: Union[str, Sequence[str], None] = '1cafa1837b7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints and columns first
    op.drop_constraint(op.f('packages_offer_id_fkey'), 'packages', type_='foreignkey')
    op.drop_constraint(op.f('packages_trip_type_id_fkey'), 'packages', type_='foreignkey')
    op.drop_constraint(op.f('promo_codes_offer_id_fkey'), 'promo_codes', type_='foreignkey')
    op.drop_column('packages', 'offer_id')
    op.drop_column('packages', 'trip_type_id')
    op.drop_column('promo_codes', 'offer_id')
    # Now drop the tables
    op.drop_table('offers')
    op.drop_table('trip_types')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('promo_codes', sa.Column('offer_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('promo_codes_offer_id_fkey'), 'promo_codes', 'offers', ['offer_id'], ['id'])
    op.add_column('packages', sa.Column('trip_type_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('packages', sa.Column('offer_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('packages_trip_type_id_fkey'), 'packages', 'trip_types', ['trip_type_id'], ['id'])
    op.create_foreign_key(op.f('packages_offer_id_fkey'), 'packages', 'offers', ['offer_id'], ['id'])
    op.create_table('trip_types',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('trip_types_pkey')),
    sa.UniqueConstraint('name', name=op.f('trip_types_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('offers',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('discount_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('discount_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('max_usage_per_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_usage_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('valid_from', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('valid_until', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('offers_pkey'))
    )
    # ### end Alembic commands ###
