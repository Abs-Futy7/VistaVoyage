"""Auto-generated migration

Revision ID: 0b4f503227f2
Revises: 8893b244b6c6
Create Date: 2025-06-30 01:57:11.445720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b4f503227f2'
down_revision: Union[str, Sequence[str], None] = '8893b244b6c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activities', sa.Column('featured_image', sa.TEXT(), nullable=True))
    op.alter_column('activities', 'duration_hours',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.NUMERIC(precision=4, scale=2),
               existing_nullable=True)
    op.alter_column('activities', 'difficulty_level',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('activities', 'age_restriction',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_column('activities', 'additional_notes')
    op.drop_column('activities', 'equipment_required')
    op.drop_column('activities', 'image_url')
    op.add_column('blogs', sa.Column('cover_image', sa.TEXT(), nullable=True))
    op.alter_column('blogs', 'excerpt',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_constraint(op.f('blogs_slug_key'), 'blogs', type_='unique')
    op.drop_column('blogs', 'meta_description')
    op.drop_column('blogs', 'view_count')
    op.drop_column('blogs', 'meta_keywords')
    op.drop_column('blogs', 'is_published')
    op.drop_column('blogs', 'cover_image_url')
    op.drop_column('blogs', 'author_name')
    op.drop_column('blogs', 'like_count')
    op.drop_column('blogs', 'meta_title')
    op.drop_column('blogs', 'slug')
    op.drop_column('blogs', 'reading_time')
    op.add_column('bookings', sa.Column('cancellation_date', postgresql.TIMESTAMP(), nullable=True))
    op.add_column('bookings', sa.Column('cancellation_reason', sa.TEXT(), nullable=True))
    op.drop_constraint(op.f('bookings_booking_reference_key'), 'bookings', type_='unique')
    op.drop_column('bookings', 'booking_reference')
    op.drop_column('bookings', 'medical_conditions')
    op.drop_column('bookings', 'customer_name')
    op.drop_column('bookings', 'guests')
    op.drop_column('bookings', 'customer_email')
    op.drop_column('bookings', 'dietary_requirements')
    op.drop_column('bookings', 'base_amount')
    op.drop_column('bookings', 'emergency_contact_phone')
    op.drop_column('bookings', 'customer_phone')
    op.drop_column('bookings', 'travel_date')
    op.drop_column('bookings', 'tax_amount')
    op.drop_column('bookings', 'emergency_contact_name')
    op.drop_column('bookings', 'special_requests')
    op.drop_column('bookings', 'guest_details')
    op.add_column('destinations', sa.Column('featured_image', sa.TEXT(), nullable=True))
    op.drop_column('destinations', 'climate')
    op.drop_column('destinations', 'image_url')
    op.drop_column('destinations', 'longitude')
    op.drop_column('destinations', 'latitude')
    op.drop_column('offers', 'usage_count')
    op.drop_column('offers', 'offer_type')
    op.drop_column('offers', 'minimum_group_size')
    op.drop_column('offers', 'minimum_booking_amount')
    op.drop_column('package_activities', 'additional_cost')
    op.add_column('packages', sa.Column('duration_nights', sa.INTEGER(), nullable=False))
    op.add_column('packages', sa.Column('featured_image', sa.VARCHAR(length=500), nullable=True))
    op.drop_column('packages', 'min_age')
    op.drop_column('packages', 'gallery_images')
    op.drop_column('packages', 'max_group_size')
    op.drop_column('packages', 'terms_conditions')
    op.drop_column('packages', 'available_from')
    op.drop_column('packages', 'booking_deadline_days')
    op.drop_column('packages', 'excludes')
    op.drop_column('packages', 'image_url')
    op.drop_column('packages', 'cancellation_policy')
    op.drop_column('packages', 'includes')
    op.drop_column('packages', 'available_until')
    op.drop_column('packages', 'itinerary')
    op.drop_column('promo_codes', 'usage_count')
    op.drop_column('trip_types', 'color_code')
    op.drop_column('trip_types', 'icon')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('trip_types', sa.Column('icon', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('trip_types', sa.Column('color_code', sa.VARCHAR(length=7), autoincrement=False, nullable=True))
    op.add_column('promo_codes', sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('packages', sa.Column('itinerary', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('available_until', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('includes', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('cancellation_policy', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('excludes', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('booking_deadline_days', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('available_from', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('terms_conditions', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('max_group_size', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('packages', sa.Column('gallery_images', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('packages', sa.Column('min_age', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('packages', 'featured_image')
    op.drop_column('packages', 'duration_nights')
    op.add_column('package_activities', sa.Column('additional_cost', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('offers', sa.Column('minimum_booking_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('offers', sa.Column('minimum_group_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('offers', sa.Column('offer_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('offers', sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('destinations', sa.Column('latitude', sa.NUMERIC(precision=10, scale=8), autoincrement=False, nullable=True))
    op.add_column('destinations', sa.Column('longitude', sa.NUMERIC(precision=11, scale=8), autoincrement=False, nullable=True))
    op.add_column('destinations', sa.Column('image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.add_column('destinations', sa.Column('climate', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('destinations', 'featured_image')
    op.add_column('bookings', sa.Column('guest_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('special_requests', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('emergency_contact_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('tax_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('travel_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('customer_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('emergency_contact_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('base_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('dietary_requirements', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('customer_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('guests', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('customer_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('medical_conditions', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('bookings', sa.Column('booking_reference', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('bookings_booking_reference_key'), 'bookings', ['booking_reference'], postgresql_nulls_not_distinct=False)
    op.drop_column('bookings', 'cancellation_reason')
    op.drop_column('bookings', 'cancellation_date')
    op.add_column('blogs', sa.Column('reading_time', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('blogs', sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('blogs', sa.Column('meta_title', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('blogs', sa.Column('like_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('blogs', sa.Column('author_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('blogs', sa.Column('cover_image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.add_column('blogs', sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('blogs', sa.Column('meta_keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('blogs', sa.Column('view_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('blogs', sa.Column('meta_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('blogs_slug_key'), 'blogs', ['slug'], postgresql_nulls_not_distinct=False)
    op.alter_column('blogs', 'excerpt',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_column('blogs', 'cover_image')
    op.add_column('activities', sa.Column('image_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    op.add_column('activities', sa.Column('equipment_required', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('activities', sa.Column('additional_notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('activities', 'age_restriction',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('activities', 'difficulty_level',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.alter_column('activities', 'duration_hours',
               existing_type=sa.NUMERIC(precision=4, scale=2),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=True)
    op.drop_column('activities', 'featured_image')
    # ### end Alembic commands ###
