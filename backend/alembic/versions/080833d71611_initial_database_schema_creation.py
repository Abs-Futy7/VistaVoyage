"""Initial database schema creation

Revision ID: 080833d71611
Revises: 
Create Date: 2025-07-08 19:49:55.716847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '080833d71611'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('duration_hours', sa.NUMERIC(precision=4, scale=2), nullable=True),
    sa.Column('featured_image', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('is_super_admin', sa.BOOLEAN(), nullable=False),
    sa.Column('last_login_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('destinations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('best_time_to_visit', sa.VARCHAR(length=100), nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('featured_image', sa.TEXT(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('discount_percentage', sa.NUMERIC(precision=5, scale=2), nullable=True),
    sa.Column('discount_amount', sa.NUMERIC(precision=10, scale=2), nullable=True),
    sa.Column('max_usage_per_user', sa.INTEGER(), nullable=True),
    sa.Column('total_usage_limit', sa.INTEGER(), nullable=True),
    sa.Column('valid_from', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('valid_until', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trip_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('city', sa.VARCHAR(length=100), nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), nullable=True),
    sa.Column('passport', sa.VARCHAR(length=255), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('bookings_count', sa.INTEGER(), nullable=False),
    sa.Column('last_login_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email')
    )
    op.create_table('blogs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('excerpt', sa.TEXT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('cover_image', sa.TEXT(), nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('packages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('destination_id', sa.UUID(), nullable=False),
    sa.Column('trip_type_id', sa.UUID(), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=True),
    sa.Column('featured_image', sa.VARCHAR(length=500), nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['destination_id'], ['destinations.id'], ),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.ForeignKeyConstraint(['trip_type_id'], ['trip_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promo_codes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.VARCHAR(length=50), nullable=False),
    sa.Column('offer_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('discount_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('discount_value', sa.FLOAT(), nullable=False),
    sa.Column('minimum_amount', sa.FLOAT(), nullable=True),
    sa.Column('maximum_discount', sa.FLOAT(), nullable=True),
    sa.Column('start_date', sa.DATE(), nullable=False),
    sa.Column('expiry_date', sa.DATE(), nullable=False),
    sa.Column('usage_limit', sa.INTEGER(), nullable=True),
    sa.Column('used_count', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('bookings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('promo_code_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('payment_status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('booking_date', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('cancellation_date', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('cancellation_reason', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.ForeignKeyConstraint(['promo_code_id'], ['promo_codes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package_activities',
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('activity_id', sa.UUID(), nullable=False),
    sa.Column('is_included', sa.BOOLEAN(), nullable=False),
    sa.Column('order_index', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.PrimaryKeyConstraint('package_id', 'activity_id')
    )
    op.create_table('package_details',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('highlights', sa.TEXT(), nullable=True),
    sa.Column('itinerary', sa.TEXT(), nullable=True),
    sa.Column('inclusions', sa.TEXT(), nullable=True),
    sa.Column('exclusions', sa.TEXT(), nullable=True),
    sa.Column('terms_conditions', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id')
    )
    op.create_table('package_images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('alt_text', sa.VARCHAR(length=255), nullable=True),
    sa.Column('display_order', sa.INTEGER(), nullable=False),
    sa.Column('is_primary', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('package_schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('duration_days', sa.INTEGER(), nullable=False),
    sa.Column('duration_nights', sa.INTEGER(), nullable=False),
    sa.Column('max_group_size', sa.INTEGER(), nullable=True),
    sa.Column('min_age', sa.INTEGER(), nullable=True),
    sa.Column('available_from', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('available_until', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id')
    )
    op.create_table('booking_payments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('booking_id', sa.UUID(), nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('paid_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('discount_amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('booking_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('booking_payments')
    op.drop_table('package_schedules')
    op.drop_table('package_images')
    op.drop_table('package_details')
    op.drop_table('package_activities')
    op.drop_table('bookings')
    op.drop_table('promo_codes')
    op.drop_table('packages')
    op.drop_table('blogs')
    op.drop_table('users')
    op.drop_table('trip_types')
    op.drop_table('offers')
    op.drop_table('destinations')
    op.drop_table('admins')
    op.drop_table('activities')
    # ### end Alembic commands ###
