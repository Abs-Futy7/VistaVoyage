"""Add promo code standalone fields

Revision ID: c95b70d23bae
Revises: 4e18041aac0f
Create Date: 2025-06-30 16:40:15.999188

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'c95b70d23bae'
down_revision: Union[str, Sequence[str], None] = '4e18041aac0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add nullable columns first
    op.add_column('promo_codes', sa.Column('description', sa.TEXT(), nullable=True))
    op.add_column('promo_codes', sa.Column('discount_type', sa.VARCHAR(length=20), nullable=True))
    op.add_column('promo_codes', sa.Column('discount_value', sa.FLOAT(), nullable=True))
    op.add_column('promo_codes', sa.Column('minimum_amount', sa.FLOAT(), nullable=True))
    op.add_column('promo_codes', sa.Column('maximum_discount', sa.FLOAT(), nullable=True))
    op.add_column('promo_codes', sa.Column('start_date', sa.DATE(), nullable=True))
    op.add_column('promo_codes', sa.Column('expiry_date', sa.DATE(), nullable=True))
    op.add_column('promo_codes', sa.Column('usage_limit', sa.INTEGER(), nullable=True))
    op.add_column('promo_codes', sa.Column('used_count', sa.INTEGER(), nullable=True))
    
    # Update existing rows with default values
    op.execute("""
        UPDATE promo_codes 
        SET 
            discount_type = 'percentage',
            discount_value = 10.0,
            start_date = CURRENT_DATE,
            expiry_date = CURRENT_DATE + INTERVAL '1 year',
            used_count = current_usage
        WHERE discount_type IS NULL
    """)
    
    # Now make required columns NOT NULL
    op.alter_column('promo_codes', 'discount_type', nullable=False)
    op.alter_column('promo_codes', 'discount_value', nullable=False)
    op.alter_column('promo_codes', 'start_date', nullable=False)
    op.alter_column('promo_codes', 'expiry_date', nullable=False)
    op.alter_column('promo_codes', 'used_count', nullable=False)
    
    # Make offer_id nullable
    op.alter_column('promo_codes', 'offer_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('promo_codes', 'offer_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('promo_codes', 'used_count')
    op.drop_column('promo_codes', 'usage_limit')
    op.drop_column('promo_codes', 'expiry_date')
    op.drop_column('promo_codes', 'start_date')
    op.drop_column('promo_codes', 'maximum_discount')
    op.drop_column('promo_codes', 'minimum_amount')
    op.drop_column('promo_codes', 'discount_value')
    op.drop_column('promo_codes', 'discount_type')
    op.drop_column('promo_codes', 'description')
    # ### end Alembic commands ###
